[{"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\index.js":"1","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\store.js":"3","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\component\\Products.js":"4","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\CartScreen.js":"5","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\SigninScreen.js":"6","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\HomeScreen.js":"7","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\Register.js":"8","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\PaymentScreen.js":"9","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\PlaceOrderScreen.js":"10","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\ShippingAddressScreen.js":"11","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\ProductScreen.js":"12","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\OrderScreen.js":"13","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\reducers\\cartReducer.js":"14","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\reducers\\userReducer.js":"15","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\reducers\\productReducer.js":"16","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\reducers\\orderReducer.js":"17","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\actions\\userAction.js":"18","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\actions\\cartActions.js":"19","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\component\\MessageBox.js":"20","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\component\\Rating.js":"21","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\component\\LoadingBox.js":"22","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\actions\\productAction.js":"23","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\actions\\orderAction.js":"24","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\component\\CheckoutSteps.js":"25","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\constants\\cartConstant.js":"26","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\constants\\orderConstant.js":"27","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\constants\\useConstant.js":"28","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\constants\\productConstant.js":"29","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\App.js":"30"},{"size":641,"mtime":1719304534734,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1709539069495,"results":"33","hashOfConfig":"32"},{"size":1373,"mtime":1718721913184,"results":"34","hashOfConfig":"32"},{"size":704,"mtime":1709539069490,"results":"35","hashOfConfig":"32"},{"size":4202,"mtime":1709539069485,"results":"36","hashOfConfig":"32"},{"size":2274,"mtime":1718872611142,"results":"37","hashOfConfig":"32"},{"size":1119,"mtime":1719468721199,"results":"38","hashOfConfig":"32"},{"size":3047,"mtime":1709539069488,"results":"39","hashOfConfig":"32"},{"size":2599,"mtime":1709539069487,"results":"40","hashOfConfig":"32"},{"size":6245,"mtime":1718872191531,"results":"41","hashOfConfig":"32"},{"size":2802,"mtime":1709539069488,"results":"42","hashOfConfig":"32"},{"size":5307,"mtime":1709539069487,"results":"43","hashOfConfig":"32"},{"size":7728,"mtime":1709539069486,"results":"44","hashOfConfig":"32"},{"size":1520,"mtime":1709539069493,"results":"45","hashOfConfig":"32"},{"size":1184,"mtime":1718603029779,"results":"46","hashOfConfig":"32"},{"size":1058,"mtime":1709539069494,"results":"47","hashOfConfig":"32"},{"size":1563,"mtime":1709539069494,"results":"48","hashOfConfig":"32"},{"size":1583,"mtime":1719846673110,"results":"49","hashOfConfig":"32"},{"size":1269,"mtime":1719846594473,"results":"50","hashOfConfig":"32"},{"size":224,"mtime":1709539069490,"results":"51","hashOfConfig":"32"},{"size":2130,"mtime":1718601893992,"results":"52","hashOfConfig":"32"},{"size":206,"mtime":1709539069490,"results":"53","hashOfConfig":"32"},{"size":1139,"mtime":1719846663053,"results":"54","hashOfConfig":"32"},{"size":2174,"mtime":1719846606084,"results":"55","hashOfConfig":"32"},{"size":454,"mtime":1709539069490,"results":"56","hashOfConfig":"32"},{"size":266,"mtime":1709539069491,"results":"57","hashOfConfig":"32"},{"size":631,"mtime":1709539069491,"results":"58","hashOfConfig":"32"},{"size":401,"mtime":1709539069492,"results":"59","hashOfConfig":"32"},{"size":372,"mtime":1709539069492,"results":"60","hashOfConfig":"32"},{"size":2866,"mtime":1718805579001,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1b9r7sp",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\index.js",[],[],["160","161"],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\store.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\component\\Products.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\CartScreen.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\SigninScreen.js",["162"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\"\r\nimport { userAction } from '../actions/userAction';\r\nimport LoadingBox from '../component/LoadingBox';\r\nimport MessageBox from '../component/MessageBox';\r\n\r\nexport default function SigninScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n    let navigate = useNavigate();\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(userAction(Email, Password))\r\n    }   \r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\r\n\r\n    const userInfo = useSelector(state => state.userSignin)\r\n\r\n    const { loading, error } = userInfo\r\n\r\n    useEffect(() => {\r\n        if (userInfo.userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [userInfo.userInfo, navigate]);\r\n\r\n    return (\r\n        <div>\r\n            <form className='form' onSubmit={onSubmitHandler}>\r\n                <div>\r\n                    <h1>Sign in</h1>\r\n                    {loading && <LoadingBox />}\r\n                    {\r\n                        error&&<MessageBox message={error}/>\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input type=\"email\" placeholder='Enter email' onChange={(e) => { setEmail(e.target.value) }} required />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" placeholder='Enter password' onChange={(e) => { setPassword(e.target.value) }} required />\r\n                </div>\r\n                <div>\r\n                    <button className='primary' type=\"submit\">Sign In</button>\r\n                </div>\r\n                <div>\r\n                    <label />\r\n                    <div>\r\n                        New Customer? <Link to={`/register?redirect=${redirect}`}>Create your acoount</Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\HomeScreen.js",["163","164","165"],[],"import React, { useEffect, useState } from 'react';\r\nimport Product from '../component/Products';\r\nimport axios from \"axios\"\r\nimport LoadingBox from '../component/LoadingBox';\r\nimport MessageBox from '../component/MessageBox';\r\nimport { listProducts } from '../actions/productAction';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nexport default function HomeScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n\r\n    const { loading, error, products } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ? <LoadingBox /> :\r\n                    error ? <MessageBox variant=\"danger\" message={error} /> :\r\n                        <div className=\"row center\">\r\n                            {Array.isArray(products) && products.map((product) => (\r\n                                <Product key={product._id} product={product}></Product>\r\n                            ))}\r\n                        </div>\r\n            }\r\n        </div>\r\n    );\r\n}","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\Register.js",["166","167","168"],[],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\"\r\nimport { RegisterAction, userAction } from '../actions/userAction';\r\nimport LoadingBox from '../component/LoadingBox';\r\nimport MessageBox from '../component/MessageBox';\r\n\r\nexport default function RegisterScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n    let navigate = useNavigate();\r\n    const [Email, setEmail] = useState(\"\");\r\n    const [Password, setPassword] = useState(\"\");\r\n    const [Name, setName] = useState(\"\");\r\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (Password == ConfirmPassword) {\r\n            dispatch(RegisterAction(Name, Email, Password))\r\n        } else {\r\n            alert(\"Password and confirm password do not matching\")\r\n        }\r\n    }\r\n\r\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"\r\n\r\n    const userInfo = useSelector(state => state.register)\r\n\r\n    const { loading, error } = userInfo\r\n\r\n    useEffect(() => {\r\n        if (userInfo.userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [userInfo.userInfo, navigate]);\r\n\r\n    return (\r\n        <div>\r\n            <form className='form' onSubmit={onSubmitHandler}>\r\n                <div>\r\n                    <h1>Create Account</h1>\r\n                    {loading && <LoadingBox />}\r\n                    {\r\n                        error && <MessageBox message={error} />\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" placeholder='Enter name' onChange={(e) => { setName(e.target.value) }} required />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input type=\"email\" placeholder='Enter email' onChange={(e) => { setEmail(e.target.value) }} required />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" placeholder='Enter password' onChange={(e) => { setPassword(e.target.value) }} required />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"conformPassword\">ConfirmPassword</label>\r\n                    <input type=\"password\" placeholder='Enter email' onChange={(e) => { setConfirmPassword(e.target.value) }} required />\r\n                </div>\r\n                <div>\r\n                    <button className='primary' type=\"submit\">Sign up</button>\r\n                </div>\r\n                <div>\r\n                    <label />\r\n                    <div>\r\n                        Already have an account? <Link to={`/signin?redirect=${redirect}`}>Sign in</Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\PaymentScreen.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\PlaceOrderScreen.js",["169"],[],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { orderCreateAction } from '../actions/orderAction';\r\nimport CheckoutSteps from '../component/CheckoutSteps';\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstant';\r\nimport LoadingBox from '../component/LoadingBox';\r\nimport MessageBox from '../component/MessageBox';\r\n\r\nexport default function PlaceOrderScreen() {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    if (!cart.paymentMethod) {\r\n        navigate(\"/payment\")\r\n    }\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n\r\n    const { loading, error, success, order } = orderCreate\r\n\r\n    const toPrice = (num) => Number(num.toFixed(2));\r\n    cart.itemsPrice = toPrice(\r\n        cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0)\r\n    )\r\n\r\n    cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10)\r\n\r\n    cart.taxPrice = toPrice(0.15 * cart.itemsPrice)\r\n\r\n    cart.totalPrice = cart.itemsPrice + cart.taxPrice + cart.shippingPrice\r\nconsole.log(cart.totalPrice,cart.itemsPrice,cart.taxPrice,cart.shippingPrice,\"allprices\")\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(orderCreateAction({ ...cart, cartItems: cart.cartItems }))\r\n        console.log(cart,\"crt\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            navigate(`/orders/${order.order._id}`)\r\n            dispatch({type:ORDER_CREATE_RESET})\r\n        }\r\n    }, [success])\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                    <ul>\r\n                        <li>\r\n                            <div className=\"card card-body\">\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name:</strong>{cart.shippingAddress.Name}<br />\r\n                                    <strong>Address:</strong>{cart.shippingAddress.Address} ,\r\n                                    {cart.shippingAddress.City},\r\n                                    {cart.shippingAddress.Postalcode},\r\n                                    {cart.shippingAddress.Country}\r\n\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <div className=\"card card-body\">\r\n                                <h2>Payment</h2>\r\n                                <p>\r\n                                    <strong>Method:</strong>{cart.paymentMethod}\r\n                                </p>\r\n                            </div>\r\n                        </li>\r\n\r\n\r\n                        <li>\r\n                            <div className=\"card card-body\">\r\n                                <h2>Order Items</h2>\r\n                                <ul>\r\n                                    {\r\n                                        cart.cartItems.map((item) => (\r\n                                            <li key={item.product}>\r\n                                                <div className=\"row\">\r\n                                                    <div>\r\n                                                        <img src={item.image} alt={item.name} className='small' />\r\n                                                    </div>\r\n                                                    <div className=\"min-30\">\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </div>\r\n\r\n                                                    <div>{item.qty} X ${item.price}=${item.qty * item.price}</div>\r\n\r\n                                                </div>\r\n\r\n\r\n                                            </li>\r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-1\">\r\n                    <div className=\"card card-body\">\r\n                        <ul>\r\n                            <li><h2>Order Summary</h2></li>\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Items</div>\r\n                                    <div>${cart.itemsPrice}</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Shipping</div>\r\n                                    <div>${cart.shippingPrice}</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Tax</div>\r\n                                    <div>${cart.taxPrice}</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div><strong>Total</strong></div>\r\n                                    <div><strong>${cart.totalPrice}</strong></div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <button onClick={placeOrderHandler} disabled={cart.cartItems.length === 0} className='primary block'>Place Order</button>\r\n                            </li>\r\n                            {\r\n                                loading&&<LoadingBox></LoadingBox>\r\n                            }\r\n                            {\r\n                                error&&<MessageBox message={error}/>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\ShippingAddressScreen.js",["170"],[],"import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { shippingCart } from '../actions/cartActions';\r\nimport CheckoutSteps from '../component/CheckoutSteps';\r\n\r\nexport default function ShippingAddressScreen() {\r\n\r\n    const userSignin = useSelector((state) => state.userSignin)\r\n    const { userInfo } = userSignin;\r\n    if (!userInfo) {\r\n        navigate(\"/signin\")\r\n    }\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [Name, setName] = useState(shippingAddress.Name);\r\n    const [Address, setAddress] = useState(shippingAddress.Address);\r\n    const [City, setCity] = useState(shippingAddress.City);\r\n    const [PostalCode, setPostalCode] = useState(shippingAddress.PostalCode);\r\n    const [Country, setCountry] = useState(shippingAddress.Country);\r\n\r\n    const onShippingSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(shippingCart({ Name, Address, City, PostalCode, Country }))\r\n        navigate(\"/payment\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2></CheckoutSteps>\r\n            <form className=\"form\" onSubmit={onShippingSubmit}>\r\n                <div>\r\n                    <h1> Shipping Address</h1>\r\n                </div>\r\n                <div>\r\n                    <label for=\"name\">Full Name</label>\r\n                    <input type=\"text\" placeholder='Enter Name' value={Name} onChange={(e) => setName(e.target.value)} required/>\r\n                </div>\r\n                <div>\r\n                    <label for=\"address\">Address</label>\r\n                    <input type=\"text\" placeholder='Enter Address'value={Address} onChange={(e) => setAddress(e.target.value)} required/>\r\n                </div>\r\n                <div>\r\n                    <label for=\"city\">City</label>\r\n                    <input type=\"text\" placeholder='Enter City' value={City} onChange={(e) => setCity(e.target.value)} required/>\r\n                </div>\r\n                <div>\r\n                    <label for=\"code\">Postal Code</label>\r\n                    <input type=\"text\" placeholder='Enter Postal Code' value={PostalCode} onChange={(e) => setPostalCode(e.target.value)} required/>\r\n                </div>\r\n                <div>\r\n                    <label for=\"country\">Country</label>\r\n                    <input type=\"text\" placeholder='Enter Country' value={Country} onChange={(e) => setCountry(e.target.value)} required/>\r\n                </div>\r\n                <div>\r\n                    <button className='primary' type='submit'>Countinue</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\ProductScreen.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\Screens\\OrderScreen.js",["171","172","173"],[],"import React, { useEffect, useState } from 'react';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport LoadingBox from '../component/LoadingBox';\r\nimport MessageBox from '../component/MessageBox';\r\nimport { detailsOrder, payOrder } from '../actions/orderAction';\r\nimport Axios from 'axios';\r\n\r\nexport default function OrderScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams();\r\n\r\n    const [sdkReady, setsdkReady] = useState(false);\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n\r\n    const { loading, error, success, order } = orderDetails\r\n\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { error: errorPay, success: successPay, loading: loadingPay } = orderPay\r\n\r\n    useEffect(() => {\r\n\r\n        const addPaypalScript = async () => {\r\n            const { data } = await Axios.get('/api/config/paypal');\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www/paypal.com/sdk/js?client-id=${data}`\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setsdkReady(true)\r\n            }\r\n\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || (order._id !== id)) {\r\n            dispatch(detailsOrder(id))\r\n        } else {\r\n            if (!order.isPaid) {\r\n                if (!window.paypal) {\r\n                    addPaypalScript()\r\n                } else {\r\n                    setsdkReady(true)\r\n                }\r\n            }\r\n        }\r\n\r\n    }, [dispatch, order, id, sdkReady])\r\n\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(order, paymentResult))\r\n    }\r\n\r\n\r\n    return loading ? (<LoadingBox />) : error ? <MessageBox message={error.message} /> : (\r\n        <div>\r\n            <h2>Order {order._id}</h2>\r\n            <div className=\"row top\">\r\n                <div className=\"col-2\">\r\n                    <ul>\r\n                        <li>\r\n                            <div className=\"card card-body\">\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name:</strong>{order.shippingAddress.Name}<br />\r\n                                    <strong>Address:</strong>{order.shippingAddress.Address} ,\r\n                                    {order.shippingAddress.City},\r\n                                    {order.shippingAddress.Postalcode},\r\n                                    {order.shippingAddress.Country}\r\n\r\n                                </p>\r\n                                {\r\n                                    order.isDelivered ? (\r\n                                        <MessageBox message={order.isDelivered} varient=\"success\">Delivered at</MessageBox>\r\n                                    ) :\r\n                                        <MessageBox message=\"Not Delivered\" varient=\"danger\"></MessageBox>\r\n                                }\r\n                            </div>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <div className=\"card card-body\">\r\n                                <h2>Payment</h2>\r\n                                <p>\r\n                                    <strong>Method:</strong>{order.paymentMethod}\r\n                                </p>\r\n                                {\r\n                                    order.isPaid ? (\r\n                                        <MessageBox message={order.isPaid} varient=\"success\">Delivered at</MessageBox>\r\n                                    ) :\r\n                                        <MessageBox message=\"Not Paid\" varient=\"danger\"></MessageBox>\r\n                                }\r\n                            </div>\r\n                        </li>\r\n\r\n\r\n                        <li>\r\n                            <div className=\"card card-body\">\r\n                                <h2>Order Items</h2>\r\n                                <ul>\r\n                                    {\r\n                                        order.orderItems.map((item) => (\r\n                                            <li key={item.product}>\r\n                                                <div className=\"row\">\r\n                                                    <div>\r\n                                                        <img src={item.image} alt={item.name} className='small' />\r\n                                                    </div>\r\n                                                    <div className=\"min-30\">\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </div>\r\n\r\n                                                    <div>{item.qty} X ${item.price}=${item.qty * item.price}</div>\r\n\r\n                                                </div>\r\n\r\n\r\n                                            </li>\r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-1\">\r\n                    <div className=\"card card-body\">\r\n                        <ul>\r\n                            <li><h2>Order Summary</h2></li>\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Items</div>\r\n                                    <div>${order.itemsPrice}</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Shipping</div>\r\n                                    <div>${order.shippingPrice}</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div>Tax</div>\r\n                                    <div>${order.taxPrice}</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"row\">\r\n                                    <div><strong>Total</strong></div>\r\n                                    <div><strong>${order.totalPrice}</strong></div>\r\n                                </div>\r\n                            </li>\r\n                            {\r\n                                !order.isPaid && (\r\n                                    <li>\r\n                                        {\r\n                                            sdkReady ? <LoadingBox /> :\r\n                                                <>\r\n                                                    {errorPay && <MessageBox message={errorPay}></MessageBox>}\r\n                                                    {loadingPay && <LoadingBox />}\r\n                                                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler}></PayPalButton>\r\n                                                </>\r\n                                        }   \r\n                                    </li>\r\n                                )\r\n                            }\r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\reducers\\cartReducer.js",["174"],[],"import { CART_ADD_ITEM, CART_EMPTY, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SHIPPING_ITEM } from \"../constants/cartConstant\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.filter((data) => data.product != action.payload)\r\n                }\r\n            }\r\n        case CART_SHIPPING_ITEM:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    shippingAddress: action.payload\r\n                }\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    paymentMethod: action.payload\r\n                }\r\n            }\r\n\r\n        case CART_EMPTY:\r\n            return { cartItems: [] }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\reducers\\userReducer.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\reducers\\productReducer.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\reducers\\orderReducer.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\actions\\userAction.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\actions\\cartActions.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\component\\MessageBox.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\component\\Rating.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\component\\LoadingBox.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\actions\\productAction.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\actions\\orderAction.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\component\\CheckoutSteps.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\constants\\cartConstant.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\constants\\orderConstant.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\constants\\useConstant.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\constants\\productConstant.js",[],[],"C:\\Users\\SREERAG\\Desktop\\Amazone_clone\\frontend\\src\\App.js",[],[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":32,"column":8,"nodeType":"181","endLine":32,"endColumn":37,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"187","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":13},{"ruleId":"179","severity":1,"message":"188","line":19,"column":8,"nodeType":"181","endLine":19,"endColumn":10,"suggestions":"189"},{"ruleId":"183","severity":1,"message":"190","line":5,"column":26,"nodeType":"185","messageId":"186","endLine":5,"endColumn":36},{"ruleId":"191","severity":1,"message":"192","line":21,"column":22,"nodeType":"193","messageId":"194","endLine":21,"endColumn":24},{"ruleId":"179","severity":1,"message":"180","line":38,"column":8,"nodeType":"181","endLine":38,"endColumn":37,"suggestions":"195"},{"ruleId":"179","severity":1,"message":"196","line":46,"column":8,"nodeType":"181","endLine":46,"endColumn":17,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":12,"column":9,"nodeType":"185","messageId":"200","endLine":12,"endColumn":17},{"ruleId":"183","severity":1,"message":"201","line":4,"column":16,"nodeType":"185","messageId":"186","endLine":4,"endColumn":27},{"ruleId":"183","severity":1,"message":"202","line":19,"column":29,"nodeType":"185","messageId":"186","endLine":19,"endColumn":36},{"ruleId":"179","severity":1,"message":"203","line":52,"column":8,"nodeType":"181","endLine":52,"endColumn":39,"suggestions":"204"},{"ruleId":"191","severity":1,"message":"205","line":25,"column":78,"nodeType":"193","messageId":"194","endLine":25,"endColumn":80},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["208"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["209"],"'userAction' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["210"],"React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'order.order._id'. Either include them or remove the dependency array.",["211"],"no-use-before-define","'navigate' was used before it was defined.","usedBeforeDefined","'useNavigate' is defined but never used.","'success' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'successPay'. Either include it or remove the dependency array.",["212"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"213","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [userInfo.userInfo, navigate, redirect]",{"range":"222","text":"223"},"Update the dependencies array to be: [dispatch]",{"range":"224","text":"225"},{"range":"226","text":"223"},"Update the dependencies array to be: [dispatch, navigate, order.order._id, success]",{"range":"227","text":"228"},"Update the dependencies array to be: [dispatch, order, id, sdkReady, successPay]",{"range":"229","text":"230"},[1001,1030],"[userInfo.userInfo, navigate, redirect]",[611,613],"[dispatch]",[1277,1306],[1605,1614],"[dispatch, navigate, order.order._id, success]",[1737,1768],"[dispatch, order, id, sdkReady, successPay]"]